names(obesity_dummy)[13:16] <- c("food_inbetween_always","food_inbetween_frequently","food_inbetween_no", "food_inbetween_sometimes")
# alcohol
obesity_dummy <- cbind(obesity_dummy[1:21], dummy(obesity_dummy$alcohol, sep = "_"), obesity_dummy[23:24])
names(obesity_dummy)[22:25] <- c("alcohol_always","alcohol_frequently","alcohol_no", "alcohol_sometimes")
# MTRANS
obesity_dummy <- cbind(obesity_dummy[1:25], dummy(obesity_dummy$MTRANS, sep = "_"), obesity_dummy[27])
names(obesity_dummy)[26:30] <- c("mtrans_automobile","mtrans_bike","mtrans_motorbike", "mtrans_public_transportation", "mtrans_walking")
# CH2O
obesity_dummy <- cbind(obesity_dummy[1:17], dummy(obesity_dummy$CH2O, sep = "_"), obesity_dummy[19:31])
names(obesity_dummy)[18:20] <- c("CH2O_between_1_and_2","CH2O_less_than_a_liter","CH2O_more_than_2")
# physical_act
obesity_dummy <- cbind(obesity_dummy[1:21], dummy(obesity_dummy$physical_act, sep = "_"), obesity_dummy[23:33])
names(obesity_dummy)[22:24] <- c("physical_act_1_2","physical_act_2_4", "physical_act_do_not_have")
# tech_devices : this one is a little bit tricky since there a many categories but only one is represented within the data!
obesity_dummy <- cbind(obesity_dummy[1:24], dummy(obesity_dummy$tech_devices, sep = "_"), obesity_dummy[26:35])
names(obesity_dummy)[25:27] <- c("tech_1_hour", "tech_2_hours_or_more", "tech_0_hours")
#remove(obesity_dum)
obesity_dummy <- subset(obesity_dummy[c(1:36)])
return(obesity_dummy)
}
obesity_dum = dummify(obesity_factor)
# Partitioning the data (60% training, 40% validation)
set.seed(1)
train.obs <- sample(rownames(obesity_dum), dim(obesity_dum)[1]*0.6)
train.set <- obesity_dum[train.obs, ]
set.seed(1)
valid.obs <- setdiff(rownames(obesity_dum), train.obs)
valid.set <- obesity_dum[valid.obs, ]
ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..prop.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Creating histograms :
multi.hist(obesity[,2:4], density = TRUE)
# Creating boxplots :
par(mfrow = c(1, 3))
boxplot(obesity$Weight, ylab = "Weight")
boxplot(obesity$Height, ylab = "Height")
boxplot(obesity$Age, ylab = "Age")
# Barplots :
plot_1 = ggplot(data=obesity_bin, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_2 = ggplot(data=obesity_bin, aes(x=main_meals)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_3 = ggplot(data=obesity_bin, aes(x=Gender)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_4 = ggplot(data=obesity_bin, aes(x=family_history)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_5 = ggplot(data=obesity_bin, aes(x=vegetables)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_6 = ggplot(data=obesity_bin, aes(x=food_inbetween)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity_bin, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_8 = ggplot(data=obesity_bin, aes(x=eat_caloric)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_9 = ggplot(data=obesity_bin, aes(x=SMOKE)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_10 = ggplot(data=obesity_bin, aes(x=CH2O)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_11 = ggplot(data=obesity_bin, aes(x=monitor_cal)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_12 = ggplot(data=obesity_bin, aes(x=physical_act)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_13 = ggplot(data=obesity_bin, aes(x=alcohol)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_14 = ggplot(data=obesity_bin, aes(x=MTRANS)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
# Arranging them two-by-two :
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_3, plot_4, ncol=2)
grid.arrange(plot_5, plot_6, ncol=2)
grid.arrange(plot_7, plot_8, ncol=2)
grid.arrange(plot_9, plot_10, ncol=2)
grid.arrange(plot_11, plot_12, ncol=2)
grid.arrange(plot_13, plot_14, ncol=2)
# Correlation plot
cor.plot(na.omit(obesity [c(2,3,4)]))
# Linear regression
lm_weight <- lm(Weight ~ Gender + Age + Height + family_hist + eat_caloric + vegetables_sometimes +vegetables_always + main_meals_Btw_1_2 + main_meals_More_than_3 + food_inbetween_always + food_inbetween_frequently + food_inbetween_sometimes + smoke + CH2O_between_1_and_2 + CH2O_more_than_2 + monitor_cal + physical_act_1_2 +physical_act_2_4 + tech_1_hour+ tech_2_hours_or_more + alcohol_always + alcohol_frequently + alcohol_sometimes + mtrans_automobile + mtrans_bike + mtrans_public_transportation  , data = train.set)
summary(lm_weight)
plot(lm_weight)
# Stepwise model selection
# Forward
lm_forward_obesity <- step(lm_weight, direction = "forward")
summary(lm_forward_obesity)
# AIC: 6999.41
# Model: Weight ~ Gender + Age + Height + family_hist + eat_caloric + vegetables_sometimes + vegetables_always + main_meals_Btw_1_2 + main_meals_More_than_3 + food_inbetween_always + food_inbetween_frequently + food_inbetween_sometimes + smoke + CH2O_between_1_and_2 + CH2O_more_than_2 + monitor_cal + physical_act_1_2 + physical_act_2_4 + tech_1_hour + tech_2_hours_or_more + alcohol_always + alcohol_frequently + alcohol_sometimes + mtrans_automobile + mtrans_bike + mtrans_public_transportation
# Backward
lm_backward_obesity <- step(lm_weight, direction = "backward")
summary(lm_backward_obesity)
# AIC: 6988.52
# Model: Weight ~ Gender + Age + Height + family_hist + eat_caloric + vegetables_sometimes + vegetables_always + main_meals_Btw_1_2 +  main_meals_More_than_3 + food_inbetween_frequently + CH2O_more_than_2 + monitor_cal + physical_act_1_2 + physical_act_2_4 + tech_1_hour + tech_2_hours_or_more + alcohol_sometimes + mtrans_automobile + mtrans_public_transportation
# Both
lm_both_obesity <- step(lm_weight, direction = "both")
summary(lm_both_obesity)
# AIC: 6988.52
# model: Weight ~ Gender + Age + Height + family_hist + eat_caloric + vegetables_sometimes + vegetables_always + main_meals_Btw_1_2 + main_meals_More_than_3 + food_inbetween_frequently + CH2O_more_than_2 + monitor_cal + physical_act_1_2 + physical_act_2_4 + tech_1_hour + tech_2_hours_or_more + alcohol_sometimes + mtrans_automobile + mtrans_public_transportation
# Predictions on the validation set
# Forward model:
forward_pred_obesity <- predict(lm_forward_obesity, valid.set)
# RMSE
gofRMSE(valid.set$Weight, forward_pred_obesity, dgt = 3) # 16.376
# Mean error
gofME(valid.set$Weight, forward_pred_obesity, dgt = 3) # 1.038
# MAPE
gofMAPE(valid.set$Weight, forward_pred_obesity, dgt = 3) # 16.344
# Backward model:
backward_pred_obesity <- predict(lm_backward_obesity, valid.set)
# RMSE
gofRMSE(valid.set$Weight, backward_pred_obesity, dgt = 3) # 16.416
# Mean error
gofME(valid.set$Weight, backward_pred_obesity, dgt = 3) # 1.002
# MAPE
gofMAPE(valid.set$Weight, backward_pred_obesity, dgt = 3) # 16.363
# Both model:
both_pred_obesity <- predict(lm_both_obesity, valid.set)
# RMSE
gofRMSE(valid.set$Weight, both_pred_obesity, dgt = 3) # 16.416
# Mean error
gofME(valid.set$Weight, both_pred_obesity, dgt = 3) # 1.002
# MAPE
gofMAPE(valid.set$Weight, both_pred_obesity, dgt = 3) # 16.363
# Running the k-NN model :
set.seed(1)
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
set.seed(1)
k_nn <-
train(
Weight ~ .,
data = train.set,
method = "knn",
trControl=trctrl,
preProcess = c("range")
)
predicted = predict(k_nn, valid.set)
# First run a quite big tree (CP = 0.00001) :
set.seed(1)
tree_1 <- rpart(
Weight ~ .,
data = train.set,
method = "anova",
control = rpart.control(
cp = 0.00001,
minbucket = 1,
maxdepth = 10
)
)
# We do a CV : must locate in the table the point from which the CV error starts to rise :
printcp(tree_1)
set.seed(1)
tree_2 <- rpart(
Weight ~ .,
data = train.set,
method = "anova",
control = rpart.control(
cp = 0.0051561,
minbucket = 1,
maxdepth = 10
)
)
plot_tree = prp(
tree_2,
type = 1,
extra = 1,
under = TRUE,
split.font = 1,
varlen = -10
)
# First, let's create two vectors, one for the predicted values, and another for the actual values :
predicted_train <- predict(tree_2, train.set)
actual_train <- train.set$Weight
# And lastly, we make use of the RSME formula to calculate it :
RMSE_train = sqrt(mean((predicted_train-actual_train)^2))
RMSE_train
predicted_valid <- predict(tree_2, valid.set)
actual_valid <- valid.set$Weight
RMSE_valid = sqrt(mean((predicted_valid-actual_valid)^2))
RMSE_valid
par(mfrow = c(1, 2))
boxplot(
predicted_train,
actual_train,
names = c("Predicted", "Actual"),
ylab = "Weight",
xlab = "Training Set"
)
boxplot(
predicted_valid,
actual_valid,
names = c("Predicted", "Actual"),
ylab = "Weight",
xlab = "Validation Set"
)
plot(predicted-predicted_valid, ylab = "Error across models")
abline(h = 10)
abline(h = -10)
par(mfrow = c(1, 2))
# For KNN :
plot(predicted-valid.set[,4], main = "k-Nearest Neighbors", ylab = "Predicted - Actual (= error)")
abline(h = mean(predicted-valid.set[,4]))
# For tree :
plot(predicted_valid-valid.set[, 4], main = "Regression Tree", ylab = "Predicted - Actual (= error)")
abline(h = mean(predicted_valid-valid.set[, 4]))
# For k-NN :
mean(predicted-valid.set[,4])
# For tree :
mean(predicted_valid-valid.set[, 4])
# Creating dataframe :
ensemble_df <-
data.frame(
actual = valid.set[, 4],
MLR = backward_pred_obesity,
knn = predicted,
Regression_tree = predicted_valid,
Ensemble_Method = (predicted + predicted_valid + backward_pred_obesity) / 3
)
pander(head(ensemble_df))
RMSE_ensemble = sqrt(mean((ensemble_df[, 5] - valid.set[, 4])^2))
RMSE_ensemble
RMSE_total.df = data.frame(
RMSE_MLR = 16.416,
RMSE_kNN = 13.53326,
RMSE_Tree = 13.25937,
RMSE_Ensemble = 12.05331
)
pander(RMSE_total.df)
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$Weight = 70.0
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = to_factor(example.df)
predict(k_nn, example.df)
example.df = to_factor(example.df)
example.df = binning(example.df)
predict(k_nn, example.df)
example.df
example.df = to_factor(example.df)
example.df = binning(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.df)
predict(k_nn, example.final.df)
example.final.df
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Weight = 70.0
example.df$family_history = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = to_factor(example.df)
example.df = binning(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Weight = 70.0
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = to_factor(example.df)
View(example.df)
example.df = binning(example.df)
example.big.df = rbind(obesity_factor, example.df)
View(example.big.df)
example.big.df = dummify(example.big.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$Weight = 70.0
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = to_factor(example.df)
example.df = binning(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$Weight = 70.0
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
runApp('Weight_Predictor')
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "0-2_hours"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df$NObeyesdad = "Normal_weight"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
runApp('Weight_Predictor')
View(obesity_bin)
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "One_hour"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
runApp('Weight_Predictor')
runApp('Weight_Predictor')
runApp('Weight_Predictor')
runApp('Weight_Predictor')
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "One_hour"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
example.df = obesity[1,]
app.df = obesity_bin[1,]
View(app.df)
app.df = to_factor(app.df)
app.big.df = rbind(obesity_factor, app.df)
app.big.df = dummify(app.big.df)
app.final.df = app.big.df[2112, ]
runApp('Weight_Predictor')
runApp('Weight_Predictor')
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "More_than_3"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "One_hour"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
example.df = obesity[1,]
example.df$Gender = "Male"
example.df$Age = 25
example.df$Height = 1.78
example.df$family_history = "no"
example.df$eat_caloric = "no"
example.df$vegetables = "Always"
example.df$main_meals = "Three"
example.df$food_inbetween = "no"
example.df$SMOKE = "no"
example.df$CH2O = "Between 1 and 2 L"
example.df$monitor_cal = "no"
example.df$physical_act = "2 or 4 days"
example.df$tech_devices = "One_hour"
example.df$alcohol = "no"
example.df$MTRANS = "Walking"
example.df = binning(example.df)
example.df = to_factor(example.df)
example.big.df = rbind(obesity_factor, example.df)
example.big.df = dummify(example.big.df)
example.final.df = example.big.df[2112, ]
predict(k_nn, example.final.df)
runApp('Weight_Predictor')
predict(lm_backward_obesity, example.final.df)
runApp('Weight_Predictor')
runApp('Weight_Predictor')
runApp('Weight_Predictor')
runApp('Weight_Predictor')
runApp('Weight_Predictor')
