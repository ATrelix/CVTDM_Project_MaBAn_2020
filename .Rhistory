colnames(x)[1] = colnames(obesity[i])
print(x)
}
obesity$FCVC[obesity$FCVC > 2 & obesity$FCVC <=3] <- "Always"
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
print(x)
}
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
pander(print(x))
}
pander(x)
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
pander(x)
}
x = pander(count(obesity, obesity[, i], name = "Count"))
colnames(x)[1] = colnames(obesity[i])
colnames(x)[1]
x
pander(print(x))
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
pander(print(x))
}
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
pander(print(as.table(x)))
}
x = as.matrix(count(obesity, obesity[, i], name = "Count"))
for (i in c(1, 5:10, 12, 15:17)){
x = as.matrix(count(obesity, obesity[, i], name = "Count"))
colnames(x)[1] = colnames(obesity[i])
print(x)
}
for (i in c(1, 5:10, 12, 15:17)){
x = as.matrix(count(obesity, obesity[, i], name = "Count"))
colnames(x)[1] = colnames(obesity[i])
pander(print(x))
}
x = as.table(count(obesity, obesity[, i], name = "Count"))
print(pandoc.tables(x))
print(pandoc.table(x))
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
print(pandoc.table(x))
}
names(family_history_with_overweight)
summary(family_history_with_overweight)
summary(as.factor(family_history_with_overweight))
str(summary(as.factor(family_history_with_overweight)))
as.integer(summary(as.factor(family_history_with_overweight)))
summary(as.factor(family_history_with_overweight))
as.dataframe(summary(as.factor(family_history_with_overweight)))
as.data.frame(summary(as.factor(family_history_with_overweight)))
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
print(as.data.frame(summary(as.factor(i))))
}
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
as.data.frame(summary(as.factor(obesity[, i])))
}
print(as.data.frame(summary(as.factor(obesity[, i]))))
for (i in c(1, 5:10, 12, 15:17)){
x = count(obesity, obesity[, i], name = "Count")
colnames(x)[1] = colnames(obesity[i])
print(as.data.frame(summary(as.factor(obesity[, i]))))
}
install.packages(c("corrplot", "ellipse", "psych"))
# To adjust the page margins when knitting to PDF :
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45),tidy=TRUE)
# Used packages :
library(pander)
library(dplyr)
library(gt)
library(car)
library(ggplot2)
library(gridExtra)
library(psych)
library(corrplot)
library(ellipse)
library(dummies)
library(nnet)
# Working Directory :
setwd("~/GitHub/CVTDM_Project_MaBAn_2020")
# Reading the data :
obesity <- read.csv("Obesity.csv", header=T, sep=",")
attach(obesity)
summary(Obesity)
# To adjust the page margins when knitting to PDF :
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45),tidy=TRUE)
# Used packages :
library(pander)
library(dplyr)
library(gt)
library(car)
library(ggplot2)
library(gridExtra)
library(psych)
library(corrplot)
library(ellipse)
library(dummies)
library(nnet)
# Working Directory :
setwd("~/GitHub/CVTDM_Project_MaBAn_2020")
# Reading the data :
obesity <- read.csv("Obesity.csv", header=T, sep=",")
attach(obesity)
# Small metadata table :
tibble_table <-
tibble(
"Variable Name" = c(colnames(obesity)[1:14], "", colnames(obesity)[15:17]),
Description = c("Gender", "Age", "Height", "Weight", "Has a family member suffered or suffers from overweight?", "Do you eat high caloric food frequently?", "Do you usually eat vegetables in your meals?", "How many main meals do you have daily?", "Do you eat any food between meals?", "Do you smoke?", "How much water do you drink daily?", "Do you monitor the calories you eat daily?", "How often do you have physical activity?", "How much time do you use technological devices such as", "cell phone videogames, television, computer and others?", "How often do you drink alcohol?", "Which transportation do you usually use?", "Obesity level based on calculation of Mass Body Index")
)
metadata <- gt(data = tibble_table)
metadata %>%
tab_header(title = md("**Metadata**"),
subtitle = "from the dataset we are using") %>%
tab_source_note(source_note = "Based on information in :
https://www.sciencedirect.com/science/article/pii/S2352340919306985")
pander(head(obesity))
# Changing column names:
names(obesity)[5] = "family_history"
names(obesity)[6] = "eat_caloric"
names(obesity)[7] = "vegetables"
names(obesity)[8] = "main_meals"
names(obesity)[9] = "food_inbetween"
names(obesity)[12] = "monitor_cal"
names(obesity)[13] = "physical_act"
names(obesity)[14] = "tech_devices"
names(obesity)[15] = "alcohol"
# Checking the dataset structure :
str(obesity)
summary(obesity)
# Converting character variables to factor :
obesity$Gender = as.factor(obesity$Gender)
obesity$family_history = as.factor(obesity$family_history)
obesity$eat_caloric = as.factor(obesity$eat_caloric)
obesity$food_inbetween = as.factor(obesity$food_inbetween)
obesity$SMOKE = as.factor(obesity$SMOKE)
obesity$monitor_cal = as.factor(obesity$monitor_cal)
obesity$alcohol = as.factor(obesity$alcohol)
obesity$MTRANS = as.factor(obesity$MTRANS)
obesity$NObeyesdad = as.factor(obesity$NObeyesdad)
obesity$vegetables = as.factor(obesity$vegetables)
obesity$main_meals= as.factor(obesity$main_meals)
obesity$CH2O= as.factor(obesity$CH2O)
obesity$physical_act= as.factor(obesity$physical_act)
obesity$tech_devices= as.factor(obesity$tech_devices)
# Binning some numerical variables :
#vegetables
obesity$vegetables[obesity$vegetables <= 1] <- "Never"
obesity$vegetables[obesity$vegetables > 1 & obesity$vegetables <=2] <- "Sometimes"
obesity$vegetables[obesity$vegetables > 2 & obesity$vegetables <=3] <- "Always"
#main_meals
obesity$main_meals[obesity$main_meals >= 1 & obesity$main_meals < 3] <- "Btw_1_&_2"
obesity$main_meals[obesity$main_meals == 3] <- "Three"
obesity$main_meals[obesity$main_meals > 3 & obesity$main_meals <= 4] <- "More_than_3"
#tech_devices
obesity$tech_devices[obesity$tech_devices >= 0 & obesity$tech_devices <= 2] <- "0-2_hours"
obesity$tech_devices[obesity$tech_devices >= 3 & obesity$tech_devices <= 5] <- "3-5_hours"
obesity$main_meals[obesity$tech_devices > 5 ] <- "more_than_5_hours"
#physical_act
obesity$physical_act[obesity$physical_act < 1] <- "I do not have"
obesity$physical_act[obesity$physical_act >= 1 & obesity$physical_act <= 2] <- "1 or 2 days"
obesity$physical_act[obesity$physical_act >= 2 & obesity$physical_act <= 4] <- "2 or 4 days"
obesity$physical_act[obesity$physical_act >= 4 & obesity$physical_act <= 5] <- "4 or 5 days"
#CH2O
obesity$CH2O[obesity$CH2O <= 1 ] <- "Less than a liter"
obesity$CH2O[obesity$CH2O <= 2 ] <- "Between 1 and 2 L"
obesity$CH2O[obesity$CH2O <=3 ] <- "More than 2 L"
#Removing Missing values
na.omit(obesity)
ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..prop.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Creating histograms :
multi.hist(obesity[,2:4], density = TRUE)
# Barplots :
plot_1 = ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_2 = ggplot(data=obesity, aes(x=main_meals)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_3 = ggplot(data=obesity, aes(x=Gender)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_4 = ggplot(data=obesity, aes(x=family_history)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_5 = ggplot(data=obesity, aes(x=vegetables)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_6 = ggplot(data=obesity, aes(x=food_inbetween)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
# Arranging them two-by-two :
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_3, plot_4, ncol=2)
grid.arrange(plot_5, plot_6, ncol=2)
# Correlation plot
cor.plot(na.omit(obesity [c(2,3,4)]))
cor.plot(Obesity)
View(obesity)
plot_1 = ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_2 = ggplot(data=obesity, aes(x=main_meals)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_3 = ggplot(data=obesity, aes(x=Gender)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_4 = ggplot(data=obesity, aes(x=family_history)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_5 = ggplot(data=obesity, aes(x=vegetables)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_6 = ggplot(data=obesity, aes(x=food_inbetween)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_3, plot_4, ncol=2)
grid.arrange(plot_5, plot_6, ncol=2)
# To adjust the page margins when knitting to PDF :
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45),tidy=TRUE)
# Used packages :
library(pander)
library(dplyr)
library(gt)
library(car)
library(ggplot2)
library(gridExtra)
library(psych)
library(corrplot)
library(ellipse)
library(dummies)
library(nnet)
# Working Directory :
setwd("~/GitHub/CVTDM_Project_MaBAn_2020")
# Reading the data :
obesity <- read.csv("Obesity.csv", header=T, sep=",")
attach(obesity)
# Small metadata table :
tibble_table <-
tibble(
"Variable Name" = c(colnames(obesity)[1:14], "", colnames(obesity)[15:17]),
Description = c("Gender", "Age", "Height", "Weight", "Has a family member suffered or suffers from overweight?", "Do you eat high caloric food frequently?", "Do you usually eat vegetables in your meals?", "How many main meals do you have daily?", "Do you eat any food between meals?", "Do you smoke?", "How much water do you drink daily?", "Do you monitor the calories you eat daily?", "How often do you have physical activity?", "How much time do you use technological devices such as", "cell phone videogames, television, computer and others?", "How often do you drink alcohol?", "Which transportation do you usually use?", "Obesity level based on calculation of Mass Body Index")
)
metadata <- gt(data = tibble_table)
metadata %>%
tab_header(title = md("**Metadata**"),
subtitle = "from the dataset we are using") %>%
tab_source_note(source_note = "Based on information in :
https://www.sciencedirect.com/science/article/pii/S2352340919306985")
pander(head(obesity))
# Changing column names:
names(obesity)[5] = "family_history"
names(obesity)[6] = "eat_caloric"
names(obesity)[7] = "vegetables"
names(obesity)[8] = "main_meals"
names(obesity)[9] = "food_inbetween"
names(obesity)[12] = "monitor_cal"
names(obesity)[13] = "physical_act"
names(obesity)[14] = "tech_devices"
names(obesity)[15] = "alcohol"
# Checking the dataset structure :
str(obesity)
summary(obesity)
# Binning some numerical variables :
#vegetables
obesity$vegetables[obesity$vegetables <= 1] <- "Never"
obesity$vegetables[obesity$vegetables > 1 & obesity$vegetables <=2] <- "Sometimes"
obesity$vegetables[obesity$vegetables > 2 & obesity$vegetables <=3] <- "Always"
#main_meals
obesity$main_meals[obesity$main_meals >= 1 & obesity$main_meals < 3] <- "Btw_1_&_2"
obesity$main_meals[obesity$main_meals == 3] <- "Three"
obesity$main_meals[obesity$main_meals > 3 & obesity$main_meals <= 4] <- "More_than_3"
#tech_devices
obesity$tech_devices[obesity$tech_devices >= 0 & obesity$tech_devices <= 2] <- "0-2_hours"
obesity$tech_devices[obesity$tech_devices >= 3 & obesity$tech_devices <= 5] <- "3-5_hours"
obesity$main_meals[obesity$tech_devices > 5 ] <- "more_than_5_hours"
#physical_act
obesity$physical_act[obesity$physical_act < 1] <- "I do not have"
obesity$physical_act[obesity$physical_act >= 1 & obesity$physical_act <= 2] <- "1 or 2 days"
obesity$physical_act[obesity$physical_act >= 2 & obesity$physical_act <= 4] <- "2 or 4 days"
obesity$physical_act[obesity$physical_act >= 4 & obesity$physical_act <= 5] <- "4 or 5 days"
#CH2O
obesity$CH2O[obesity$CH2O <= 1 ] <- "Less than a liter"
obesity$CH2O[obesity$CH2O <= 2 ] <- "Between 1 and 2 L"
obesity$CH2O[obesity$CH2O <=3 ] <- "More than 2 L"
# Converting character variables to factor :
obesity$Gender = as.factor(obesity$Gender)
obesity$family_history = as.factor(obesity$family_history)
obesity$eat_caloric = as.factor(obesity$eat_caloric)
obesity$food_inbetween = as.factor(obesity$food_inbetween)
obesity$SMOKE = as.factor(obesity$SMOKE)
obesity$monitor_cal = as.factor(obesity$monitor_cal)
obesity$alcohol = as.factor(obesity$alcohol)
obesity$MTRANS = as.factor(obesity$MTRANS)
obesity$NObeyesdad = as.factor(obesity$NObeyesdad)
obesity$vegetables = as.factor(obesity$vegetables)
obesity$main_meals= as.factor(obesity$main_meals)
obesity$CH2O= as.factor(obesity$CH2O)
obesity$physical_act= as.factor(obesity$physical_act)
obesity$tech_devices= as.factor(obesity$tech_devices)
#Removing Missing values
na.omit(obesity)
ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..prop.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Creating histograms :
multi.hist(obesity[,2:4], density = TRUE)
# Barplots :
plot_1 = ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_2 = ggplot(data=obesity, aes(x=main_meals)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_3 = ggplot(data=obesity, aes(x=Gender)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_4 = ggplot(data=obesity, aes(x=family_history)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_5 = ggplot(data=obesity, aes(x=vegetables)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_6 = ggplot(data=obesity, aes(x=food_inbetween)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
# Arranging them two-by-two :
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_3, plot_4, ncol=2)
grid.arrange(plot_5, plot_6, ncol=2)
# Correlation plot
cor.plot(na.omit(obesity [c(2,3,4)]))
cor.plot(Obesity)
# Barplots :
plot_1 = ggplot(data=obesity, aes(x=NObeyesdad)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_2 = ggplot(data=obesity, aes(x=main_meals)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_3 = ggplot(data=obesity, aes(x=Gender)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_4 = ggplot(data=obesity, aes(x=family_history)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_5 = ggplot(data=obesity, aes(x=vegetables)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_6 = ggplot(data=obesity, aes(x=food_inbetween)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_7 = ggplot(data=obesity, aes(x=tech_devices)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_8 = ggplot(data=obesity, aes(x=eat_caloric)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_9 = ggplot(data=obesity, aes(x=SMOKE)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_10 = ggplot(data=obesity, aes(x=CH2O)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_11 = ggplot(data=obesity, aes(x=monitor_cal)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_12 = ggplot(data=obesity, aes(x=physical_act)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_13 = ggplot(data=obesity, aes(x=alcohol)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
plot_14 = ggplot(data=obesity, aes(x=MTRANS)) +
geom_bar(aes(y = ..count.., group = 1)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.5, size=2.2)
# Arranging them two-by-two :
grid.arrange(plot_1, plot_2, ncol=2)
grid.arrange(plot_3, plot_4, ncol=2)
grid.arrange(plot_5, plot_6, ncol=2)
grid.arrange(plot_7, plot_8, ncol=2)
grid.arrange(plot_9, plot_10, ncol=2)
grid.arrange(plot_11, plot_12, ncol=2)
grid.arrange(plot_13, plot_14, ncol=2)
# Dummyfing the binary variables(family_history, eat_caloric, SMOKE, and monitor_cal) :
# Gender 1 = female, 0 = male
obesity_dummy <- cbind(dummy(obesity$Gender, sep = "_"), obesity[2:17])
names(obesity_dummy)[1] <- c("Gender")
obesity_dummy <- subset(obesity_dummy, select = -c(2) )
# family_history 1 = yes, 0 = no
obesity_dummy <- cbind( obesity_dummy[1:4], dummy(obesity_dummy$family_hist, sep = "_"), obesity_dummy[6:17])
names(obesity_dummy)[6] <- c("family_hist")
obesity_dummy <- subset(obesity_dummy, select = -c(5) )
# eat_caloric with 1 = yes, 0 = no
obesity_dummy <- cbind( obesity_dummy[1:5], dummy(obesity_dummy$eat_caloric, sep = "_"), obesity_dummy[7:17])
names(obesity_dummy)[7] <- c("eat_caloric")
obesity_dummy <- subset(obesity_dummy, select = -c(6) )
# SMOKE 1 = yes, 0 = no
obesity_dummy <- cbind( obesity_dummy[1:9], dummy(obesity_dummy$SMOKE, sep = "_"), obesity_dummy[11:17])
names(obesity_dummy)[11] <- c("smoke")
obesity_dummy <- subset(obesity_dummy, select = -c(10) )
# monitor_cal 1 = yes, 0 = no
obesity_dummy <- cbind( obesity_dummy[1:11], dummy(obesity_dummy$monitor_cal, sep = "_"), obesity_dummy[13:17])
names(obesity_dummy)[13] <- c("monitor_cal")
obesity_dummy <- subset(obesity_dummy, select = -c(12) )
# Dummmyfying the categorical variables
# vegetables
obesity_dum <- cbind( obesity_dummy[1:6], dummy(obesity_dummy$vegetables, sep = "_"), obesity_dummy[8:17])
names(obesity_dum)[7:9] <- c("vegetables_never","vegetables_sometimes","vegetable_always")
# main_meals
obesity_dum <- cbind( obesity_dum[1:9], dummy(obesity_dum$main_meals, sep = "_"), obesity_dum[11:19])
names(obesity_dum)[10:12] <- c("main_meals_Btw_1_&_2","main_meals_More_than_3","main_meals_three")
# food_in_between
obesity_dum <- cbind( obesity_dum[1:12], dummy(obesity_dum$food_inbetween, sep = "_"), obesity_dum[14:21])
names(obesity_dum)[13:16] <- c("food_inbetween_always","food_inbetween_frequently","food_inbetween_no", "food_inbetween_sometimes")
# alcohol
obesity_dum <- cbind( obesity_dum[1:21], dummy(obesity_dum$alcohol, sep = "_"), obesity_dum[23:24])
names(obesity_dum)[22:25] <- c("alcohol_always","alcohol_frequently","alcohol_no", "alcohol_sometimes")
# MTRANS
obesity_dum <- cbind( obesity_dum[1:25], dummy(obesity_dum$MTRANS, sep = "_"), obesity_dum[27])
names(obesity_dum)[26:30] <- c("mtrans_automobile","mtrans_bike","mtrans_motorbike", "mtrans_public_transportation", "mtrans_walking")
# CH2O
obesity_dum <- cbind( obesity_dum[1:17], dummy(obesity_dum$CH2O, sep = "_"), obesity_dum[19:31])
names(obesity_dum)[18:20] <- c("CH2O_less_than_a_liter","CH2O_between_1_and_2","CH2O_more_than_2")
# physical_act
obesity_dum <- cbind( obesity_dum[1:21], dummy(obesity_dum$physical_act, sep = "_"), obesity_dum[23:33])
names(obesity_dum)[22:24] <- c("physical_act_do_not_have","physical_act_1_2","physical_act_2_4")
# tech_devices : this one is a little bit tricky since there a many categories but only one is represented within the data!
obesity_dum <- cbind( obesity_dum[1:24], dummy(obesity_dum$tech_devices, sep = "_"), obesity_dum[26:35])
names(obesity_dum)[25] <- c("tech_devices_0_2")
# NObeyesdad
obesity_dum <- cbind( obesity_dum[1:34], dummy(obesity_dum$NObeyesdad, sep = "_"))
names(obesity_dum)[35:41] <- c("insufficient_weight", "normal_weight", "obesity_type_1", "obesity_type_2", "obesity_type_3", "overweight_level_1", "overweight_level_2")
View(obesity_dummy)
View(obesity_dum)
is.na(obesity)
sum(is.na(obesity))
sum(is.na(obesity))
